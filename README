FileDrop
=======

A web service for file management using distributed file system on backend


Build
-----


	$ git clone https://github.com/suen/Filedrop.git
	$ cd Filedrop

The project uses maven to resolve dependency. Build the project with

	$ mvn package


The project has two components, namenode and datanode, that should be run as
separate processes either on same machine or different machines. If running on
same machine, make sure the nodes are running from two different path. This is
to avoid overwritting of data directory.


Datanode:
For any number of datanodes that you wish to run : 

- clone the repository 

	$ git clone https://github.com/suen/Filedrop.git
	$ cd Filedrop
	
- compile the project with maven
	
	$ mvn package

- run the main class of DataNode

	$ mvn exec:java -Dexec.mainClass="com.filedrop.dfs.datanode.DataNodeServer" -Dexec.args="IP PORT"

	replace "IP" and "PORT" with IP of your network interface and an available port. eg. "127.0.0.1 8000"


Namenode

The config/namenode.conf is the configuration file used by namenode. The namenode
uses postgresql to store metadata. Modify the configuration file with your postgresql
credential. You can also modify the parameter REPLICATION_FACTOR, which determines
the number of times files should be replicated. 

The configuration files in config/datanodes/ directory has .conf files that define
datanodes to be taken into account by namenode. For eg, for datanode above, create
or modify a file (let's say "datanode1.conf") with following values

 	$ vim config/datanodes/datanode1.conf

		#content of datanode1.conf

		name = firstdatanode
		ip = 127.0.0.1 
		port = 8000
		space = 10000000000
	
	"name" is the unique name for this datanode. "space" is the disk space in byte
	allocated in this datanode for file storage. (The "space" parameter should have
	been defined at datanode level, we will likely change it in future)

To add a new datanode to the system, simply clone the repository in a new location
and define a .conf file in config/datanodes/ directory for it be recognized by
namenode


To run namenode, simply run
	
	$ mvn exec:java -Dexec.mainClass="com.filedrop.dfs.namenode.NameNodeHTTPServer" 

The namenode is running and the web interface is accessible at http://IP:PORT, where
IP, PORT are the values defined in config/namenode.conf for namenode. It is "localhost:8080"
by default



